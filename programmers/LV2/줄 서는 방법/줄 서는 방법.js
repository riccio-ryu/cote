/*
[1, 2, 3] => 6
[1, 2, 3] [1, 3, 2] =>2
[2, 1, 3] [2, 3, 1]
[3, 1, 2] [3, 2, 1]

[1,2,3,4]  => 24
[1,2,3,4] [1,2,4,3] [1,3,2,4] [1,3,4,2] [1,4,2,3] [1,4,3,2] => 6(2*3)
[2,1,3,4] [2,1,4,3] [2,3,1,4] [2,3,4,1] [2,4,1,3] [2,4,3,1] 
[3,1,2,4] [3,1,4,2] [3,2,1,4] [3,2,4,1] [3,4,1,2] [3,4,2,1] 
[4,1,2,3] [4,1,3,2] [4,2,1,3] [4,2,3,1] [4,3,1,2] [4,3,2,1] 
5번째면, 5/6 => 0...5 => [1, ] => 5/2 => 2...1
20번재면 , 20/6 => 3...2 => [4, ] => 2/2 => 1...0
*/
function solution(n, k) {
    let answer = [];
    const p = Array.from({length: n}, (_,i) => i+1)
    let l = p.reduce((a,c) => a*c, 1)   //팩토리얼
    while(answer.length < n){
        // console.log(answer, l, k, p, k-1, Math.floor((k-1)/(l/ p.length)))
        l = l / p.length;
        answer.push(...p.splice(Math.floor((k - 1) / l), 1));
        k = k % l;
    }
    return answer;
}
